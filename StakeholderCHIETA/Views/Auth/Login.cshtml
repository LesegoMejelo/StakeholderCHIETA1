
@{
   Layout = null;
}
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Login • CHIETA</title>
    <link rel="stylesheet" href="~/Content/AdminView/Login.css" />
</head>
<body class="login-page">
    <header class="topbar">
        <div class="container topbar-inner">
            <div class="brand">
                <img class="logo" src="/Content/StakeholderView/StakeholderLandingImages/Logo.png" alt="CHIETA logo" />
                <div class="divider"></div>
                <div class="page-title">Login</div>
            </div>

            <button class="icon-btn" id="settings-btn" aria-haspopup="menu" aria-expanded="false">
                <span class="hide-sm">Settings</span>
            </button>
            <nav class="menu-popover" id="settings-menu" role="menu" hidden>
                <a role="menuitem" href="#">Profile</a>
                <a role="menuitem" href="#">Notifications</a>
                <a role="menuitem" href="#">Help</a>
            </nav>
        </div>
    </header>

    <div class="login-wrap">
        <!-- Decorative -->
        <div class="decor blob-right"></div>
        <div class="decor arc-left"></div>
        <div class="decor arc-right-bottom"></div>

        <div class="login-card" role="form" aria-labelledby="loginTitle">
            <div class="login-head">
                <h1 id="loginTitle" class="login-title">Sign in</h1>
                <div class="role-switch" role="tablist" aria-label="Choose role">
                    <button id="roleAdvisor" class="role-btn" role="tab" aria-selected="true" aria-pressed="true"></button>
                    <button id="roleStakeholder" class="role-btn" role="tab" aria-selected="false" aria-pressed="false"></button>
                    <button id="roleAdmin" class="role-btn" role="tab" aria-selected="false" aria-pressed="false"></button>
                </div>
            </div>
            
                
           

            <div class="login-body">
                <form id="loginForm">

                <div class="form-row">
                    <label class="label" for="email">Email</label>
                    <input class="input" id="email" type="email" placeholder="you@example.com" required />
                </div>

                <div class="form-row">
                    <label class="label" for="password">Password</label>
                    <input class="password" id="password" type="password" placeholder="••••••••" required />
                </div>
                
              
                <div class="actions">
                    <button id="btnSignin" class="btn-primary" type="submit">Continue</button>
                </div>
                </form>
                <p id="statusMsg" class="helper" role="status" aria-live="polite"></p>
            </div>
        </div>
    </div>

    <footer class="footer">
        <div class="footer-band"></div>
        <div class="gold-box"></div>
    </footer>

    <script src="script.js"></script>
</body>
</html>

<script type="module">
    import { initializeApp } from "https://www.gstatic.com/firebasejs/10.5.0/firebase-app.js";
    import { getAuth, signInWithEmailAndPassword } from "https://www.gstatic.com/firebasejs/10.5.0/firebase-auth.js";

    const firebaseConfig = {
        apiKey: "AIzaSyDP43thmAHRibCEbFcBZx2vpA2mEPDByz8",
        authDomain: "stakeholder-app-57ed0.firebaseapp.com",
        projectId: "stakeholder-app-57ed0",
        storageBucket: "stakeholder-app-57ed0.appspot.com",
        messagingSenderId: "988521434771",
        appId: "1:988521434771:web:d189e963a8c41909a2c766"
    };

    const app = initializeApp(firebaseConfig);
    const auth = getAuth(app);

    const loginForm = document.getElementById("loginForm");
    loginForm.addEventListener("submit", async (e) => {
        e.preventDefault();

        const email = document.getElementById("email").value;
        const password = document.getElementById("password").value;

        try {
            // Show loading state
            const submitButton = loginForm.querySelector('button[type="submit"]');
            const originalText = submitButton.textContent;
            submitButton.textContent = "Logging in...";
            submitButton.disabled = true;

            const userCredential = await signInWithEmailAndPassword(auth, email, password);
            const token = await userCredential.user.getIdToken();

            console.log("Firebase login successful, UID:", userCredential.user.uid);

            const response = await fetch("/Auth/Login", {
                method: "POST",
                headers: {
                    "Content-Type": "application/x-www-form-urlencoded",
                    "Accept": "application/json"
                },
                body: new URLSearchParams({ idToken: token })
            });

            const data = await response.json();

            if (response.ok && data.success) {
                console.log("Backend login successful, redirecting to:", data.redirectUrl);
                window.location.href = data.redirectUrl;
            } else {
                console.error("Backend login failed:", data);
                alert("Login failed: " + (data.message || "Unknown error"));
                // Sign out from Firebase if backend login fails
                await auth.signOut();
            }
        } catch (error) {
            console.error("Login error:", error);
            alert("Login error: " + error.message);
        } finally {
            // Reset button state
            const submitButton = loginForm.querySelector('button[type="submit"]');
            submitButton.textContent = originalText;
            submitButton.disabled = false;
        }
    });
</script>
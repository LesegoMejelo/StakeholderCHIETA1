using Google.Cloud.Firestore;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.Razor.Compilation;

namespace Staekholder_CHIETA_X.Controllers
{
    public class AppointmentController : Controller
    {
        private readonly FirestoreDb _db;  //declaring read-only to hole an instance of firestore database

        public AppointmentController(FirestoreDb db)  //uses dependency injection to receive firestoredb
        {
            _db = db;
        }

        [HttpPost]
        [Route("api/appointment")]  //attributes that configure the method as a handler for http post requests to the api/appointment url

        //asynchronous method that handles the post request, returns IActionResult which is an interface that reps the result of an action method
        //its the main function for creating an appointment, it saves the information put on the website and takes it to firestore
        public async Task<IActionResult> Post(
            [FromForm] string advisor,
            [FromForm] string reason,
            [FromForm] string date,
            [FromForm] string time)
        {
            var docRef = await _db.Collection("appointments").AddAsync(new
            {
                advisorId = advisor,
                reason = reason,
                date = date,
                time = time,
                status = "Pending",
                createdAt = Timestamp.GetCurrentTimestamp()
            });

            return Ok(new { id = docRef.Id, message = "Appointment booked" }); //This response confirms that the appointment was successfully created and includes the unique ID generated by Firestore.
        }

        public IActionResult Index() //responsible for showing the web pages to the user
        {
            return View("~/Views/StakeholderViews/Appointment/Appointment.cshtml");
        }

    }
}
